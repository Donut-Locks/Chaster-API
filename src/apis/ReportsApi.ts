/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateReportDto,
} from '../models';
import {
    CreateReportDtoFromJSON,
    CreateReportDtoToJSON,
} from '../models';

export interface ReportCreationControllerCreateReportRequest {
    createReportDto: CreateReportDto;
}

/**
 * 
 */
export class ReportsApi extends runtime.BaseAPI {

    /**
     * Create a report
     * Create a report
     */
    async reportCreationControllerCreateReportRaw(requestParameters: ReportCreationControllerCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.createReportDto === null || requestParameters.createReportDto === undefined) {
            throw new runtime.RequiredError('createReportDto','Required parameter requestParameters.createReportDto was null or undefined when calling reportCreationControllerCreateReport.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/reports`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateReportDtoToJSON(requestParameters.createReportDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create a report
     * Create a report
     */
    async reportCreationControllerCreateReport(requestParameters: ReportCreationControllerCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.reportCreationControllerCreateReportRaw(requestParameters, initOverrides);
    }

}
