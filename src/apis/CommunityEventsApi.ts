/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CommunityEventCategory,
  GetPeriodDetailsDto,
  GetPeriodDetailsRepDto,
} from '../models';
import {
    CommunityEventCategoryFromJSON,
    CommunityEventCategoryToJSON,
    GetPeriodDetailsDtoFromJSON,
    GetPeriodDetailsDtoToJSON,
    GetPeriodDetailsRepDtoFromJSON,
    GetPeriodDetailsRepDtoToJSON,
} from '../models';

export interface CommunityEventControllerGetPeriodDetailsRequest {
    getPeriodDetailsDto: GetPeriodDetailsDto;
}

/**
 * 
 */
export class CommunityEventsApi extends runtime.BaseAPI {

    /**
     * 
     * Get community event categories
     */
    async communityEventControllerGetCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CommunityEventCategory>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/community-event/categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CommunityEventCategoryFromJSON));
    }

    /**
     * 
     * Get community event categories
     */
    async communityEventControllerGetCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CommunityEventCategory>> {
        const response = await this.communityEventControllerGetCategoriesRaw(initOverrides);
        return await response.value();
    }

    /**
     * 
     * Get community event task details for a given day
     */
    async communityEventControllerGetPeriodDetailsRaw(requestParameters: CommunityEventControllerGetPeriodDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetPeriodDetailsRepDto>> {
        if (requestParameters.getPeriodDetailsDto === null || requestParameters.getPeriodDetailsDto === undefined) {
            throw new runtime.RequiredError('getPeriodDetailsDto','Required parameter requestParameters.getPeriodDetailsDto was null or undefined when calling communityEventControllerGetPeriodDetails.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/community-event/details`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetPeriodDetailsDtoToJSON(requestParameters.getPeriodDetailsDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetPeriodDetailsRepDtoFromJSON(jsonValue));
    }

    /**
     * 
     * Get community event task details for a given day
     */
    async communityEventControllerGetPeriodDetails(requestParameters: CommunityEventControllerGetPeriodDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetPeriodDetailsRepDto> {
        const response = await this.communityEventControllerGetPeriodDetailsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
